{"ast":null,"code":"import { createAuthProvider } from 'react-token-auth';\nconst storage = window.localStorage; // or window.sessionStorage\n\nexport const {\n  useAuth,\n  authFetch,\n  login,\n  logout\n} = createAuthProvider({\n  getToken: () => storage.getItem('token'),\n  storage,\n  onUpdateToken: token => fetch('/auth/refresh', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      refreshToken: token.refresh_token\n    })\n  }).then(response => response.json()).then(data => data.access_token)\n});","map":{"version":3,"names":["createAuthProvider","storage","window","localStorage","useAuth","authFetch","login","logout","getToken","getItem","onUpdateToken","token","fetch","method","headers","body","JSON","stringify","refreshToken","refresh_token","then","response","json","data","access_token"],"sources":["/home/whitney/phase-4/E-COMMERCE-APP/ECOMMERCE-PROJECT/client/src/auth.js"],"sourcesContent":["import { createAuthProvider } from 'react-token-auth';\n\nconst storage = window.localStorage; // or window.sessionStorage\n\nexport const { useAuth, authFetch, login, logout } = createAuthProvider({\n  getToken: () => storage.getItem('token'),\n  storage,\n  onUpdateToken: (token) =>\n    fetch('/auth/refresh', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ refreshToken: token.refresh_token }),\n    })\n      .then((response) => response.json())\n      .then((data) => data.access_token),\n});\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,kBAAkB;AAErD,MAAMC,OAAO,GAAGC,MAAM,CAACC,YAAY,CAAC,CAAC;;AAErC,OAAO,MAAM;EAAEC,OAAO;EAAEC,SAAS;EAAEC,KAAK;EAAEC;AAAO,CAAC,GAAGP,kBAAkB,CAAC;EACtEQ,QAAQ,EAAEA,CAAA,KAAMP,OAAO,CAACQ,OAAO,CAAC,OAAO,CAAC;EACxCR,OAAO;EACPS,aAAa,EAAGC,KAAK,IACnBC,KAAK,CAAC,eAAe,EAAE;IACrBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,YAAY,EAAEP,KAAK,CAACQ;IAAc,CAAC;EAC5D,CAAC,CAAC,CACCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKA,IAAI,CAACC,YAAY;AACvC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}